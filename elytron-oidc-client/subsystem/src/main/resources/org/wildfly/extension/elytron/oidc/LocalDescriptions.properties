elytron-oidc-client=WildFly Extension for Elytron OIDC
elytron-oidc-client.add=Add the Elytron OIDC subsystem
elytron-oidc-client.remove=Remove the Elytron OIDC subsystem
elytron-oidc-client.realm=Configuration for a Keycloak realm. This is provided for convenience. You can copy the configuration in the Keycloak client adapter and use it here. Using the provider attribute is recommended instead.
elytron-oidc-client.provider=An OpenID Connect provider
elytron-oidc-client.secure-deployment=A deployment secured by an OpenID Connect provider

elytron-oidc-client.realm.add=Add a Keycloak realm definition to the subsystem
elytron-oidc-client.realm.remove=Remove a Keycloak realm from the subsystem
elytron-oidc-client.realm.realm-public-key=The public key of the Keycloak realm in the PEM format. This is optional. It is not recommended to set it.
elytron-oidc-client.realm.auth-server-url=The base URL of the Keycloak server.
elytron-oidc-client.realm.provider-url=The provider URL
elytron-oidc-client.realm.disable-trust-manager=Whether or not to make use of a trust manager when communicating with Keycloak over HTTPS.
elytron-oidc-client.realm.ssl-required=Whether communication with Keycloak should be over HTTPS. Valid values are: "all" - to always require HTTPS, "external" - to only require HTTPS for external requests, "none" - if HTTPS is not required. The default value is "external". This should be set to "all" in production environments.
elytron-oidc-client.realm.confidential-port=The confidential port used by Keycloak when communicating securely over SSL/TLS. The default value is 8443.
elytron-oidc-client.realm.allow-any-hostname=If true, hostname verification will be skipped when communicating with Keycloak over HTTPS. The default value is false. This can be useful in testing environments. This should never be set to true in production environments.
elytron-oidc-client.realm.truststore=The path to the trust store to use for communicating with Keycloak over HTTPS. If you prefix the path with "classpath:", the trust store will be obtained from the deployment's classpath.
elytron-oidc-client.realm.truststore-password=The password of the trust store.
elytron-oidc-client.realm.connection-pool-size=The connection pool size to be used when communicating with Keycloak. The default value is 20.
elytron-oidc-client.realm.enable-cors=Enable Keycloak Cross-Origin Resource Sharing (CORS) support. This is optional. The default value is false.
elytron-oidc-client.realm.client-keystore=The path to the client keystore to be used when communicating with Keycloak over HTTPS. This is optional.
elytron-oidc-client.realm.client-keystore-password=Password for the client keystore. This is required if client-keystore has been specified.
elytron-oidc-client.realm.client-key-password=Password for the client key. This is required if client-keystore has been specified.
elytron-oidc-client.realm.cors-max-age=If Cross-Origin Resource Sharing (CORS) is enabled, this sets the value for the Cross-Origin Resource Sharing (CORS) Max-Age header. The value can be between -1L and 2147483647L.
elytron-oidc-client.realm.cors-allowed-headers=If Cross-Origin Resource Sharing (CORS) is enabled, this sets the value of the Access-Control-Allow-Headers header. This should be a comma-separated string. This is optional. If not set, this header is not returned in CORS responses.
elytron-oidc-client.realm.cors-allowed-methods=If Cross-Origin Resource Sharing (CORS) is enabled, this sets the value of the `Access-Control-Allow-Methods header`. This should be a comma-separated string. This is optional. If not set, this header is not returned in CORS responses.
elytron-oidc-client.realm.cors-exposed-headers=If Cross-Origin Resource Sharing (CORS) is enabled, this sets the value of the `Access-Control-Expose-Headers` header. This should be a comma-separated string. This is optional. If not set, this header is not returned in CORS responses.
elytron-oidc-client.realm.expose-token=If set to true, an authenticated browser client can obtain the signed access token, through a Javascript HTTP invocation, via the URL root/k_query_bearer_token. This is optional.
elytron-oidc-client.realm.auth-server-url-for-backend-requests=The URL to make background calls to Keycloak.
elytron-oidc-client.realm.always-refresh-token=If set to true, the subsystem will refresh token on every single web request to your application. When this is enabled, a new request will be sent to Keycloak for every incoming request to your application.
elytron-oidc-client.realm.register-node-at-startup=If set to true, a registration request is sent to Keycloak. This attribute is useful only when your application is clustered. The default value is false.
elytron-oidc-client.realm.register-node-period=If register-node-at-startup is set to true, this defines how often to re-register the node.
elytron-oidc-client.realm.token-store=Whether to store account information of users in an HTTP session or in a cookie. The possible values are "session" and "cookie". The default value is session.
elytron-oidc-client.realm.principal-attribute=Indicates which claim value from the ID token to use as the principal for the identity. The principal defaults to the value of the "sub" claim from the token.
elytron-oidc-client.realm.autodetect-bearer-only=Whether to auto-detects SOAP or REST clients based on headers like X-Requested-With, SOAPAction or Accept. If you set this to true, the subsystem sends an HTTP 401 status code to unauthenticated SOAP or REST clients instead of redirecting them to the Keycloak login page. Set this to true is set to true if your application serves both users and web services. The default value is false.
elytron-oidc-client.realm.ignore-oauth-query-parameter=Disable query parameter parsing for access_token. The default value is false.
elytron-oidc-client.realm.proxy-url=The URL for the HTTP proxy if one is used.
elytron-oidc-client.realm.verify-token-audience=If set to true, then during bearer-only authentication, verify if token contains the client name defined in the attribute resource as an audience.
elytron-oidc-client.realm.socket-timeout-millis=The timeout for the socket waiting for data, in milliseconds.
elytron-oidc-client.realm.connection-ttl-millis=The amount of time in milliseconds for the connection to be kept alive. The minimum is -1L, and the maximum is 2147483647L.
elytron-oidc-client.realm.connection-timeout-millis=The timeout for establishing a connection with the remote host in milliseconds. The minimum is -1L, and the maximum is 2147483647L.
elytron-oidc-client.realm.token-signature-algorithm=The token signature algorithm used by Keycloak. The default value is RS25.

elytron-oidc-client.provider.add=Add a realm definition to the subsystem
elytron-oidc-client.provider.remove=Remove a realm from the subsystem
elytron-oidc-client.provider.realm-public-key=The public key of the OpenID provider realm realm in the PEM format. This is optional. It is not recommended to set it.
elytron-oidc-client.provider.auth-server-url=The base URL of the Keycloak realm authorization server. This is Keycloak specific.
elytron-oidc-client.provider.provider-url=The OpenID provider URL
elytron-oidc-client.provider.disable-trust-manager=Whether or not to make use of a trust manager when communicating with the OpenID provider over HTTPS.
elytron-oidc-client.provider.ssl-required=Whether communication with the OpenID provider should be over HTTPS. Valid values are: "all" - to always require HTTPS, "external" - to only require HTTPS for external requests, "none" - if HTTPS is not required. The default value is "external". This should be set to "all" in production environments.
elytron-oidc-client.provider.confidential-port=The confidential port used by the OpenID provider when communicating securely over SSL/TLS. The default value is 8443.
elytron-oidc-client.provider.allow-any-hostname=If true, hostname verification will be skipped when communicating with the OpenID provider over HTTPS. The default value is false. This can be useful in testing environments. This should never be set to true in production environments.
elytron-oidc-client.provider.truststore=The path to the trust store to use for communicating with Keycloak over HTTPS. If you prefix the path with "classpath:", the trust store will be obtained from the deployment's classpath.
elytron-oidc-client.provider.truststore-password=The password of the trust store.
elytron-oidc-client.provider.connection-pool-size=The connection pool size to be used when communicating with the OpenID provider
elytron-oidc-client.provider.enable-cors=Enable Keycloak Cross-Origin Resource Sharing (CORS) support. This is Keycloak specific.
elytron-oidc-client.provider.client-keystore=The path to the client keystore to be used when communicating with the OpenID provider over HTTPS. This is optional. This is Keycloak specific.
elytron-oidc-client.provider.client-keystore-password=The password for the client keystore. This is required if client-keystore has been specified.
elytron-oidc-client.provider.client-key-password=The password for the client key. This is required if client-keystore has been specified.
elytron-oidc-client.provider.cors-max-age=If Cross-Origin Resource Sharing (CORS) is enabled, this sets the value for the Cross-Origin Resource Sharing (CORS) Max-Age header. The value can be between -1L and 2147483647L.
elytron-oidc-client.provider.cors-allowed-headers=If Cross-Origin Resource Sharing (CORS) is enabled, this sets the value of the Access-Control-Allow-Headers header. This should be a comma-separated string. This is optional. If not set, this header is not returned in CORS responses.
elytron-oidc-client.provider.cors-allowed-methods=If Cross-Origin Resource Sharing (CORS) is enabled, this sets the value of the Access-Control-Allow-Methods header. This should be a comma-separated string. This is optional. If not set, this header is not returned in CORS responses.
elytron-oidc-client.provider.cors-exposed-headers=If Cross-Origin Resource Sharing (CORS) is enabled, this sets the value of the Access-Control-Expose-Headers header. This should be a comma-separated string. This is optional. If not set, this header is not returned in CORS responses.
elytron-oidc-client.provider.expose-token=If set to true, an authenticated browser client can obtain the signed access token, through a Javascript HTTP invocation, via the URL root/k_query_bearer_token. This is optional. The default value is false. This is specific to Keycloak.
elytron-oidc-client.provider.auth-server-url-for-backend-requests=The URL to make background calls to the OpenID provider.
elytron-oidc-client.provider.always-refresh-token=If set to true, the subsystem will refresh token on every single web request to your application. When this is enabled, a new request will be sent to the OpenID for every incoming request to your application.
elytron-oidc-client.provider.register-node-at-startup=If set to true, a registration request is sent to the OpenID provider. The default value is false. This attribute is useful only when your application is clustered.
elytron-oidc-client.provider.register-node-period=If register-node-at-startup is set to true, this defines how often to re-register the node.
elytron-oidc-client.provider.token-store=Whether to store account information of users in an HTTP session or in a cookie. The possible values are "session" and "cookie". The default value is session.
elytron-oidc-client.provider.principal-attribute=Indicates which claim value from the ID token to use as the principal for the identity. The principal defaults to the value of the "sub" claim from the token.
elytron-oidc-client.provider.autodetect-bearer-only=Whether to auto-detect SOAP or REST clients based on headers like X-Requested-With, SOAPAction or Accept. If you set this to true, the subsystem sends an HTTP 401 status code to unauthenticated SOAP or REST clients instead of redirecting them to the OpenID provider.
elytron-oidc-client.provider.ignore-oauth-query-parameter=Disable query parameter parsing for access_token. The default value is false.
elytron-oidc-client.provider.proxy-url=The URL for the HTTP proxy if one is used.
elytron-oidc-client.provider.verify-token-audience=If set to true, then during bearer-only authentication, verify if token contains the client name defined in the attribute resource as an audience.
elytron-oidc-client.provider.socket-timeout-millis=The timeout for the socket waiting for data, in milliseconds.
elytron-oidc-client.provider.connection-ttl-millis=The amount of time in milliseconds for the connection to be kept alive. The minimum is -1L, and the maximum is 2147483647L.
elytron-oidc-client.provider.connection-timeout-millis=The timeout for establishing a connection with the remote host in milliseconds. The minimum is -1L, and the maximum is 2147483647L.
elytron-oidc-client.provider.token-signature-algorithm=The token signature algorithm used by the OpenID provider. The default value is RS256.

elytron-oidc-client.secure-deployment.add=Add a deployment to be secured by an OpenID Connect provider
elytron-oidc-client.secure-deployment.remove=Remove a deployment to be secured by an OpenID Connect provider
elytron-oidc-client.secure-deployment.realm=OpenID realm
elytron-oidc-client.secure-deployment.provider=OpenID provider
elytron-oidc-client.secure-deployment.realm-public-key=Public key of the OpenID proider realm in the PEM format. This is optional. It is not recommended to set it.
elytron-oidc-client.secure-deployment.auth-server-url=The base URL of the Keycloak realm authorization server. This is Keycloak specific.
elytron-oidc-client.secure-deployment.provider-url=The OpenID provider URL.
elytron-oidc-client.secure-deployment.disable-trust-manager=Whether or not to make use of a trust manager when communicating with the OpenID provider over HTTPS.
elytron-oidc-client.secure-deployment.ssl-required=Whether communication with the OpenID provider should be over HTTPS. Valid values are: "all" - to always require HTTPS, "external" - to only require HTTPS for external requests, "none" - if HTTPS is not required. The default value is "external". This should be set to "all" in production environments.
elytron-oidc-client.secure-deployment.confidential-port=The confidential port used by the OpenID provider when communicating securely over SSL/TLS. The default value is 8443.
elytron-oidc-client.secure-deployment.allow-any-hostname=If true, hostname verification will be skipped when communicating with the OpenID provider over HTTPS. The default value is false. This can be useful in testing environments. This should never be set to true in production environments.
elytron-oidc-client.secure-deployment.truststore=The path to the trust store to use for communicating with the OpenID provider over HTTPS. If you prefix the path with "classpath:", the trust store will be obtained from the deployment's classpath.
elytron-oidc-client.secure-deployment.truststore-password=The password of the trust store.
elytron-oidc-client.secure-deployment.connection-pool-size=The connection pool size to be used when communicating with the OpenID provider.
elytron-oidc-client.secure-deployment.resource=Specify the name of the application you are securing with OIDC. Alternatively, you can specify the client-id.
elytron-oidc-client.secure-deployment.client-id=The client-id of wildfly configured in the OIDC provider.
elytron-oidc-client.secure-deployment.use-resource-role-mappings=If set to true, the sybsystem will look inside the token for application-level role mappings for a user. If set to false, the subsystem will look at the realm-level for user-role mappings. This is optional. The default value is false.
elytron-oidc-client.secure-deployment.redirect-rewrite-rule=The rewrite rule for the redirect URI. Specify the rewrite rule in an object notation, where the key is a regular expression with which the redirect URI is matched and the value is the replacement String. You can use the $ character to use for back-reference in the replacement String.
elytron-oidc-client.secure-deployment.bearer-only=Bearer-Token only authentication. Set this to true if your application serves only web services. The default value is false.
elytron-oidc-client.secure-deployment.enable-basic-auth=Enable Basic Authentication. This is not supported in the current release.
elytron-oidc-client.secure-deployment.public-client=If set to true, no client credentials are sent when communicating with the OpenID provider. This is optional. The default value is false.
elytron-oidc-client.secure-deployment.enable-cors=Enable Keycloak Cross-Origin Resource Sharing (CORS) support. This is Keycloak specific.
elytron-oidc-client.secure-deployment.autodetect-bearer-only=Whether to auto-detects SOAP or REST clients based on headers like X-Requested-With, SOAPAction or Accept. If you set this to true, the subsystem sends an HTTP 401 status code to unauthenticated SOAP or REST clients instead of redirecting them to the OpenID provider login page. Set this to true is set to true if your application serves both a web application and web services. The default value is false.
elytron-oidc-client.secure-deployment.client-keystore=Path to the client keystore to be used when communicating with the OpenID provider over HTTPS. This is optional.
elytron-oidc-client.secure-deployment.client-keystore-password=Password for the client keystore. This is required if client-keystore has been specified.
elytron-oidc-client.secure-deployment.client-key-password=Password for the client key. This is required if client-keystore has been specified.
elytron-oidc-client.secure-deployment.cors-max-age=If Cross-Origin Resource Sharing (CORS) is enabled, this sets the value for the Cross-Origin Resource Sharing (CORS) Max-Age header. The value can be between -1L and 2147483647L.
elytron-oidc-client.secure-deployment.cors-allowed-headers=If Cross-Origin Resource Sharing (CORS) is enabled, this sets the value of the Access-Control-Allow-Headers header. This should be a comma-separated string. This is optional. If not set, this header is not returned in CORS responses.
elytron-oidc-client.secure-deployment.cors-allowed-methods=If Cross-Origin Resource Sharing (CORS) is enabled, this sets the value of the Access-Control-Allow-Methods header. This should be a comma-separated string. This is optional. If not set, this header is not returned in CORS responses.
elytron-oidc-client.secure-deployment.cors-exposed-headers=If Cross-Origin Resource Sharing (CORS) is enabled, this sets the value of the Access-Control-Expose-Headers header. This should be a comma-separated string. This is optional. If not set, this header is not returned in CORS responses.
elytron-oidc-client.secure-deployment.expose-token=If set to true, an authenticated browser client can obtain the signed access token, through a Javascript HTTP invocation, via the URL root/k_query_bearer_token. This is optional. The default value is false. This is specific to Keycloak.
elytron-oidc-client.secure-deployment.auth-server-url-for-backend-requests=The URL to make background calls to the OpenID provider.
elytron-oidc-client.secure-deployment.always-refresh-token=If set to true, the subsystem will refresh token on every single web request to your application. When this is enabled, a new request will be sent to the OpenID provider for every incoming request to your application.
elytron-oidc-client.secure-deployment.register-node-at-startup=If set to true, a registration request is sent to the OpenID provider. The default value is false. This attribute is useful only when your application is clustered.
elytron-oidc-client.secure-deployment.register-node-period=If register-node-at-startup is set to true, this defines how often to re-register the node.
elytron-oidc-client.secure-deployment.token-store=Whether to store account information of users in an HTTP session or in a cookie. The possible values are "session" and "cookie". The default value is session.
elytron-oidc-client.secure-deployment.principal-attribute=Indicates which claim value from the ID token to use as the principal for the identity. The principal defaults to the value of the "sub" claim from the token.
elytron-oidc-client.secure-deployment.turn-off-change-session-id-on-login=The session id is changed by default on a successful login. Change this to true if you want to turn this off.
elytron-oidc-client.secure-deployment.token-minimum-time-to-live=The subsystem will refresh the token if the current token is expired or will expire within the duration specified in 'token-minimum-time-to-live' seconds.
elytron-oidc-client.secure-deployment.min-time-between-jwks-requests=If the subsystem recognizes token signed by unknown public key, it will try to download a new public key from elytron-oidc-client server. However it won't try to download if already tried it in less than 'min-time-between-jwks-requests' seconds.
elytron-oidc-client.secure-deployment.public-key-cache-ttl=The maximum time the downloaded public keys are considered valid. When this time is reached, the subsystem is forced to download public keys from elytron-oidc-client server.
elytron-oidc-client.secure-deployment.ignore-oauth-query-parameter=Disable query parameter parsing for access_token. The default value is false.
elytron-oidc-client.secure-deployment.proxy-url=The URL for the HTTP proxy if one is used.
elytron-oidc-client.secure-deployment.verify-token-audience=If set to true, then during bearer-only authentication, verify if token contains the client name defined in the attribute resource as an audience.
elytron-oidc-client.secure-deployment.adapter-state-cookie-path=If set, this defines the path used in cookies set by the subsystem. This is useful when deploying an application in the root context path.
elytron-oidc-client.secure-deployment.credential=The credential used to communicate with the OpenID Connect provider.
elytron-oidc-client.secure-deployment.credential.add=Add credentials used to communicate with the OpenID Connect provider
elytron-oidc-client.secure-deployment.credential.remove=Remove credentials used to communicate with the OpenID Connect provider
elytron-oidc-client.secure-deployment.credential.client-key-password=The password for the client key. This is required if client-keystore-file has been specified.
elytron-oidc-client.secure-deployment.credential.client-keystore-password=The password for the client keystore. This is required if client-keystore-file has been specified.
elytron-oidc-client.secure-deployment.credential.client-keystore-file=The path to the client keystore. This is optional.
elytron-oidc-client.secure-deployment.credential.client-keystore-type=The client keystore type
elytron-oidc-client.secure-deployment.credential.client-key-alias=The client key alias
elytron-oidc-client.secure-deployment.credential.token-timeout=Token timeout
elytron-oidc-client.secure-deployment.credential.secret=Secret
elytron-oidc-client.secure-deployment.credential.algorithm=Specify the token signature algorithm used by the OpenID provider. The default value is RS256.
elytron-oidc-client.secure-deployment.redirect-rewrite-rule.add=The rewrite rule for the redirect URI. Specify the rewrite rule in an object notation, where the key is a regular expression with which the redirect URI is matched and the value is the replacement String. You can use the $ character to use for back-reference in the replacement String.
elytron-oidc-client.secure-deployment.redirect-rewrite-rule.remove=Remove a rewrite rule for the redirect URI.
elytron-oidc-client.secure-deployment.redirect-rewrite-rule.replacement=The replacement string
elytron-oidc-client.secure-deployment.socket-timeout-millis=The timeout for the socket waiting for data, in milliseconds.
elytron-oidc-client.secure-deployment.connection-ttl-millis=The connection time to live in milliseconds
elytron-oidc-client.secure-deployment.connection-timeout-millis=The amount of time in milliseconds for the connection to be kept alive. The minimum is -1L, and the maximum is 2147483647L.
elytron-oidc-client.secure-deployment.token-signature-algorithm=The token signature algorithm used by the OpenID provider. The default value is RS25.
